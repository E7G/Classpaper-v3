# http://webui.me
# https://github.com/webui-dev/webui
# Copyright (c) 2020-2023 Hassan Draga.
# Licensed under MIT License.
# All rights reserved.
#
# Special Thanks to Turiiya (https://github.com/ttytm)

name: Windows
on:
  workflow_call:

jobs:
  setup:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bundle WebUI Bridge
        run: bridge/build.ps1
      - uses: actions/cache@v3
        with:
          path: bridge/webui_bridge.h
          key: ${{ runner.os }}-${{ github.sha }}-bridge

  build:
    needs: setup
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      matrix:
        compiler: [GCC, MSVC]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache/restore@v3
        with:
          path: bridge/webui_bridge.h
          key: ${{ runner.os }}-${{ github.sha }}-bridge
          fail-on-cache-miss: true
      - uses: microsoft/setup-msbuild@v1.1
      - if: matrix.compiler == 'MSVC'
        uses: ilammy/msvc-dev-cmd@v1
      - name: Build Debug Target
        run: |
          if ('${{ matrix.compiler }}' -eq 'MSVC') {
            nmake debug
          } else {
            mingw32-make debug
          }
      - name: Build Release Target
        run: |
          if ('${{ matrix.compiler }}' -eq 'MSVC') {
            nmake
          } else {
            mingw32-make
          }
      - name: Prepare Artifact
        shell: bash
        run: |
          cp -r include dist
          artifact=webui-${{ runner.os }}-${{ matrix.compiler }}-x64
          # Convert to lowercase (`,,` ^= lowercase shell param)
          artifact=${artifact,,}
          # Create the directory for the artifact
          mkdir $artifact
          # Add the ARTIFACT name as GitHub environment variable.
          echo "ARTIFACT=$artifact" >> $GITHUB_ENV
          mv dist/* $artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.ARTIFACT }}
      - name: Prepare Release
        if: github.ref_type == 'tag' || (github.ref_name == 'main' && github.event_name == 'push')
        shell: bash
        run: |
          7z a -tzip ${{ env.ARTIFACT }}.zip ${{ env.ARTIFACT }}/*
          if [ $GITHUB_REF_TYPE == tag ]; then
            echo "TAG=$GITHUB_REF_NAME" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
            now=$(date -u +'%Y-%m-%d %H:%M:%S UTC')
            echo "TAG=nightly" >> $GITHUB_ENV
            echo "BODY=Generated on <samp>$now</samp> from commit ${{ github.sha }}." >> $GITHUB_ENV
            echo "TITLE=WebUI Development Build" >> $GITHUB_ENV
          fi
      - name: Update Nightly Tag
        if: env.IS_PRERELEASE
        uses: richardsimko/update-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
      - name: Release
        if: github.ref_type == 'tag' || (github.ref_name == 'main' && github.event_name == 'push')
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.ARTIFACT }}.zip
          tag: ${{ env.TAG }}
          body: ${{ env.BODY }}
          name: ${{ env.TITLE }}
          prerelease: ${{ env.IS_PRERELEASE }}
          allowUpdates: true
